services:
  db_user_management:
    container_name: pong_um_db
    image: postgres:16
    environment:
      POSTGRES_DB: "${POSTGRES_DB_MANAGEMENT:-default_db}"
      POSTGRES_USER: "${POSTGRES_USER_MANAGEMENT:-posty}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD_MANAGEMENT:-insecurepass}"
      POSTGRES_ACCESS_USER: "${POSTGRES_ACCESS_USER_MANAGEMENT:-accessy}"
      POSTGRES_ACCESS_PASSWORD: "${POSTGRES_ACCESS_PASSWORD_MANAGEMENT:-accesspass}"
    expose:
      - "${DB_PORT_MANAGEMENT:-5432}"
    volumes:
      - volume_user_management:/var/lib/postgresql/data
      - ../src/common_files/db_init.sh:/docker-entrypoint-initdb.d/init.sh:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER_MANAGEMENT:-posty} -d ${POSTGRES_DB_MANAGEMENT:-default_db}"]
      interval: 10s
      timeout: 5s
      retries: 4
    restart: on-failure
    profiles:
      - user_management
      - all
    networks:
      - network_user_management

  user_management:
    container_name: pong_um
    build: ../src/user_management
    volumes:
      - ../src/user_management:/user_management
    expose:
      - "8000/tcp"
    environment:
      POSTGRES_DB: "${POSTGRES_DB_MANAGEMENT:-default_db}"
      POSTGRES_USER: "${POSTGRES_USER_MANAGEMENT:-posty}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD_MANAGEMENT:-insecurepass}"
      POSTGRES_ACCESS_USER: "${POSTGRES_ACCESS_USER_MANAGEMENT:-accessy}"
      POSTGRES_ACCESS_PASSWORD: "${POSTGRES_ACCESS_PASSWORD_MANAGEMENT:-accesspass}"
      DB_HOST: "${DB_HOST_MANAGEMENT:-db_user_management}"
      DB_PORT: "${DB_PORT_MANAGEMENT:-5432}"
      DJ_SECRET_KEY: ${DJ_SECRET_KEY_MANAGEMENT:-random_for_dev_#^0%uiw_5zqca7(sm#(x9nnf*5(kjnk}
      DEBUG: ${DEBUG:-False}
      DJ_ALLOWED_HOSTS: "${DJ_ALLOWED_HOSTS:-localhost}"
      DJ_SUDO_USERNAME_MANAGEMENT: "${DJ_SUDO_USERNAME_MANAGEMENT:-admin}"
      DJ_SUDO_EMAIL_MANAGEMENT: "${DJ_SUDO_EMAIL_MANAGEMENT:-admin@example.com}"
      DJ_SUDO_PASSWORD_MANAGEMENT: "${DJ_SUDO_PASSWORD_MANAGEMENT:-transcendence}"
      JWT_SECRET: "${JWT_SECRET:-somesecret}"
    depends_on:
      db_user_management:
        condition: service_healthy
    restart: on-failure
    profiles:
      - user_management
      - all
    networks:
      - network_user_management
    secrets:
      - public_key.pem
