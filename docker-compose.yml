include:
    - user_management.yml
    - registration.yml

services:
  db_game:
    image: postgres:16
    env_file:
      - ./src/game/.env
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # RUN postgres on differnt port
    #command: ["postgres", "-p", "5433"]
    # Now we need add -p "db_port"to the healthckeck
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${DB_USER} -d $${DB_NAME} -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 4
    networks:
      - network_game
    profiles:
      - all

  nginx:
    build: ./src/nginx
    volumes:
      - ./src/nginx/static:/www/data
    ports:
      - 8000:443
    depends_on:
      - registration
      - user_management
      - game
    networks:
      - network_game
      - network_user_management
      - network_registration
    profiles:
      - all


  game:
    build: ./src/game
    volumes:
      - ./src/game:/daphne
    expose:
      - 8000
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - ./src/game/.env
    depends_on:
      db_game:
        condition: service_healthy
    networks:
      - network_game
    profiles:
      - all

volumes:
  postgres_data:

  volume_game:
    driver: local
    driver_opts:
      type: none
      device: ~/transcendence_volumes/game
      o: bind

networks:
  network_game:
    driver: bridge
  network_registration:
    driver: bridge
  network_user_management:
    driver: bridge
