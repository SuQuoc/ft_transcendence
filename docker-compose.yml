services:
  database:
    # image to fetch from docker hub
    image: postgres:16
    # Environment variables for startup script
    # container will use these variables
    # to start the container with these define variables.
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 4

  game:
    build: ./src/game
    #command: scripts/entrypoint.sh
    volumes:
      - ./src/game:/game
    expose:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy

  user_management:
    build: ./src/user_management
    command: scripts/entrypoint.sh
    volumes:
      - ./src/user_management:/user_management
    expose:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1 #Forces python to not buffer the output and print it directly
    env_file:
      - .env

  nginx:
    build: ./src/nginx
    ports:
      - 8000:443
    depends_on:
      - game
      - user_management
      - database

volumes:
  postgres_data:
