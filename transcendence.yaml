openapi: 3.0.3
info:
  title: ft_transcendence
  description: |-
    This is the documentation of the API endpoints for the ft_transcendence project created by a team at 42 Vienna.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/MichaelLeitner/ft_transcendence/0.0.1
  - url: https://localhost:8000/
tags:
  - name: registration
    description: Required for registration/signup and login.
  - name: um
    description: Everything related to managing the user
  - name: basic registration
    description: registration without OAuth
  - name: 2fa
    description: Two factor authentication
paths:
  /registration/signup:
    post:
      tags:
        - registration
      summary: Signs up a new user
      description: TBD
      requestBody:
        description: Object containing email address and password for new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credentials'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Credentials'
        required: true
      responses:
        '201':
          description: Successful sign up
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewToken'
            application/xml:
              schema:
                $ref: '#/components/schemas/NewToken'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized user
        '500':
          description: Internal server error
  /registration/login:
    post:
      tags:
        - registration
      summary: Logs an existing user in, if correct username and password are provided
      description: TBD
      requestBody:
        description: Object containing email address and password for existing user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
          application/xml:
            schema:
              $ref: '#/components/schemas/Credentials'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Credentials'
        required: true
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewToken'
            application/xml:
              schema:
                $ref: '#/components/schemas/NewToken'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized user
        '500':
          description: Internal server error
  /registration/logout:
    get:
      tags:
        - registration
      summary: Logs user out, invalidates refresh token
      description: tbd
      security:
        - bearerAuth: []
      responses:
        '205':
          description: Successfully logged user out
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized token
        '500':
          description: Internal server error
  /registration/change_password:
    post:
      tags:
        - registration
      summary: If a verified user wants to change their password
      description: tbd
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Object containing password to change to, otp needs to be sent in 2nd step
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username of user
                  format: email
                new_password:
                  type: string
                  description: New password for user
                  format: password
                otp:
                  type: string
                  example: asdfasdfasfd
                  description: OTP for 2FA
        required: true
      responses:
        '200':
          description: Successfully changed password
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /registration/verify_token:
    get:
      tags:
        - registration
      summary: Checks if JWT (access token) is still valid
      description: Used to check validity of an access token stored on the browser. Returns 200 if valid, otherwise it'll return 401, both for missing and invalid values.
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Token is valid
        '401':
          description: Unauthorized token
  /registration/refresh_token:
    post:
      tags:
        - registration
      summary: Creates new refresh and access token
      description: TBD
      security:
        - bearerAuth: []
      requestBody:
        description: Object containing refresh token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
          application/xml:
            schema:
              $ref: '#/components/schemas/Token'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Token'
        required: true
      responses:
        '200':
          description: Successfully created new token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewToken'
            application/xml:
              schema:
                $ref: '#/components/schemas/NewToken'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized user
        '500':
          description: Internal server error
  /registration/delete_user:
    post:
      tags:
        - registration
      summary: If a user wants to delete their verified account
      description: tbd
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Object containing password and OTP for account to be deleted
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: New password for user
                  format: password
                otp:
                  type: string
                  example: asdfasdfasfd
                  description: OTP for 2FA
        required: true
      responses:
        '200':
          description: Successfully changed password
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /registration/basic_login:
    post:
      tags:
        - basic registration
      summary: Simple login, without OAuth
      description: tbd
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Object containing data needed for login
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: E-Mail-Address of user
                  format: email
                password:
                  type: string
                  description: Password associated with user
                  format: password
                otp:
                  type: string
                  example: asdfasdfasfd
                  description: OTP for 2FA
        required: true
      responses:
        '200':
          description: Successfully logged in
        '202':
          description: OTP required
        '400':
          description: Invalid request body
        '500':
          description: Internal server error
  /registration/basic_signup:
    post:
      tags:
        - basic registration
      summary: Simple signup, without OAuth
      description: tbd
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Object containing data needed for signup
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: E-Mail-Address of user
                  format: email
                password:
                  type: string
                  description: Password associated with user
                  format: password
                otp:
                  type: string
                  example: asdfasdfasfd
                  description: OTP for 2FA
        required: true
      responses:
        '200':
          description: Successfully signed up
        '201':
          description: User not verified for OTP
        '202':
          description: OTP required
        '400':
          description: Invalid request body
        '500':
          description: Internal server error
  /registration/basic_signup_change_password:
    post:
      tags:
        - basic registration
      summary: If a non-verified user wants to change their password during signup
      description: tbd
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Object containing password to change to
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username of user
                  format: email
                new_password:
                  type: string
                  description: New password for user
                  format: password
        required: true
      responses:
        '200':
          description: Successfully changed password
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /registration/basic_signup_change_username:
    post:
      tags:
        - basic registration
      summary: If a non-verified user wants to change their username during signup
      description: tbd
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Object containing usernames to change
        content:
          application/json:
            schema:
              type: object
              properties:
                current_username:
                  type: string
                  description: Current Username of user
                  format: email
                new_username:
                  type: string
                  description: New Username of user
                  format: email
        required: true
      responses:
        '200':
          description: Successfully changed username
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /registration/basic_forgot_password:
    post:
      tags:
        - basic registration
      summary: To trigger the forgot password process for non-Oauth users
      description: tbd
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Object containing username of user
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username of user
                  format: email
                otp:
                  type: string
                  example: asdfasdfasfd
                  description: OTP for 2FA
                new_password:
                  type: string
                  description: New password for user
                  format: password
        required: true
      responses:
        '200':
          description: Successfully changed password
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /registration/change_username:
    post:
      tags:
        - registration
      summary: If a user wants to change their email address/username after verification
      description: tbd
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Object containing password to change to
        content:
          application/json:
            schema:
              type: object
              properties:
                new_username:
                  type: string
                  description: Username of user
                  format: email
                otp:
                  type: string
                  example: asdfasdfasfd
                  description: OTP for 2FA
        required: true
      responses:
        '200':
          description: Successfully changed username
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /um/search:
    get:
      tags:
        - um
      summary: Searches with string for users
      description: TBD
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: term
          schema:
            type: string
          required: true
          description: Term used to search for users
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid Authentication supplied
        '404':
          description: No matching users found
  /um/friends/:
    get:
      tags:
        - um
      summary: gets a users friends and friend requests
      description: This endpoint is used to get an object containing all current friends of a user including also friend requests sent and received by the user. This is mostly used for updating the information on the users profile page.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid Authentication supplied
        '404':
          description: No matching users found
  /um/profile/:
    get:
      tags:
        - um
      summary: returns displayname, online status and image of user
      description: TBD
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserChange'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserChange'
        '400':
          description: Invalid Authentication supplied
    patch:
      tags:
        - um
      summary: changes displayname or image of user (or both)
      description: TBD
      security:
        - bearerAuth: []
      requestBody:
        description: Object containing elements to change
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                displayname:
                  type: string
                  description: New display name for the resource
                image:
                  type: string
                  format: binary
                  description: Image file to upload
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserChange'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserChange'
        '400':
          description: Invalid Authentication supplied
        '413':
          description: Content too large (image exceeded upload limit of 1 MB)
    delete:
      tags:
        - um
      summary: deletes user object from user management microservice
      description: TBD
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid Authentication supplied
  /um/friends/send:
    post:
      tags:
        - um
      summary: creates friend request for user
      description: TBD
      security:
        - bearerAuth: []
      requestBody:
        description: Object containing elements to change
        content:
          application/json:
            schema:
              type: object
              properties:
                receiver:
                  type: string
                  example: displayname1
                  description: contains displayname of user to send friend request to
        required: true
      responses:
        '201':
          description: Successful operation, created friend request
        '202':
          description: Friend request already created before
        '404':
          description: Invalid display name
  /um/friends/answer:
    post:
      tags:
        - um
      summary: changes state of friendship request
      description: TBD
      security:
        - bearerAuth: []
      requestBody:
        description: Object containing elements to change
        content:
          application/json:
            schema:
              type: object
              properties:
                friend_request_id:
                  type: integer
                  example: 123456
                  description: contains unique id of friend request to modify
                action:
                  type: string
                  enum: ['unfriend', 'accept', 'decline']
                  description: defines new state of friend request
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Invalid change requested
        '404':
          description: Not found

components:
  schemas:
    Token:
      type: object
      properties:
        refresh_token:
          type: string
          format: token
          description: string containing the refresh token created for the user
    NewToken:
      type: object
      properties:
        refresh_token:
          type: string
          format: token
          description: string containing refresh token (JWT)
        access_token:
          type: string
          format: token
          description: string containing access token (JWT)
    Credentials:
      type: object
      properties:
        username:
          type: string
          description: E-Mail-Address of user
          format: email
        password:
          type: string
          description: Password associated with user
          format: password
      required:
        - username
        - password
    User:
      type: array
      items:
        type: object
        properties:
          user_id:
            type: string
            example: 0123456
          displayname:
            type: string
            minLength: 1
            example: "Max Mustermann"
          image:
            type: string
            example: "https://i.pravatar.cc/15"
            nullable: true
          online:
            type: boolean
            format: string
            example: "true"
            nullable: true
            description: only returned if user is friends with the other user
          relationship:
            type: string
            description: relationship between users
            example: friend
            enum:
              - friend
              - requested
              - received
              - stranger
          friend_request_id:
            type: number
            format: string
            nullable: true
            description: id for friendship request, null if relationship set to stranger
    UserChange:
      type: array
      items:
        type: object
        properties:
          displayname:
            type: string
            minLength: 1
            example: "Max Mustermann"
          image:
            type: string
            example: "https://i.pravatar.cc/15"
            nullable: true
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT