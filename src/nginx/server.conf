upstream daphne_game {
   server game:8000;
}

upstream user_management_group { # identifier for group of servers, used in location block below
    server usermanagement:8000; # servername, defined in docker compose
}

upstream registration {
    server registration:8000;
}

server {

    listen 443 ssl;

    ssl_certificate     /run/secrets/localhost.crt;
    ssl_certificate_key /run/secrets/localhost.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';

    #This line instructs Nginx to add the X-XSS-Protection header to all HTTP responses
    add_header X-XSS-Protection "1; mode=block";

    #Sites can use this to avoid click-jacking attacks, by ensuring that their content is not embedded into other sites.
    #https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
    add_header X-Frame-Options SAMEORIGIN always;

    #################################### ADD SPA Pong content
    root /www/data;
    index index.html;

    location / {
        try_files $uri $uri/ =404;
    }

    location /js/ {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Max-Age' 1728000;

        try_files $uri $uri/ =404;
    }
    ###################################
    location /daphne/ {
        proxy_pass http://daphne_game;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /um/ { #any URI starting with /um/ will be handled by proxy_pass http://user_management_group which is the name defined by #servername above
        proxy_pass http://user_management_group;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    location /registration/ {
        proxy_pass http://registration;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # redirect all routes from js router to homepage on reload (not sure if final yet!!) (the response should maybe be changed!!)
    location /match {
        return 301 https://$host:8000/;
    }
    location /tournament {
        return 301 https://$host:8000/;
    }
    location /login {
        return 301 https://$host:8000/;
    }
    location /signup {
        return 301 https://$host:8000/;
    }
    location /displayname {
        return 301 https://$host:8000/;
    }
    location /friends {
        return 301 https://$host:8000/;
    }

    location /silk/ {
        proxy_pass http://registration/silk/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    location /static/silk/ {
        proxy_pass http://registration/static/silk/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /um/img/ {
        proxy_pass http://user_management_group/uploads/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /callback {
        if ($args) {
            rewrite ^/callback$ https://$host:8000?$args last;
        }
        rewrite ^/callback$ https://$host:8000 last;
    }
}
