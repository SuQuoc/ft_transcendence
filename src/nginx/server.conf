upstream game_container {
   server game:8000;
}

upstream user_management_container {
    server usermanagement:8000;
}

upstream registration_container {
    server registration:8000;
}

# https://ssl-config.mozilla.org/#server=nginx&version=1.27.0&config=modern&openssl=3.0.2w&ocsp=false&guideline=5.7

server {

    listen 443 ssl;
    listen [::]:443 ssl; #[aguilmea] we should check if ipv6 works
    http2 on;

    ssl_certificate     /run/secrets/localhost.crt;
    ssl_certificate_key /run/secrets/localhost.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions

    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds) # [aguilme] need to check what it is
    add_header Strict-Transport-Security "max-age=63072000" always;

    # https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html#nginx

    #add_header X-XSS-Protection "1; mode=block";

    #################################### ADD SPA Pong content
    root /www/data;
    index index.html;

    location / {
        try_files $uri $uri/ =404;
    }

    location /js/ {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Max-Age' 1728000;

        try_files $uri $uri/ =404;
    }
    ###################################
    location /daphne/ {
        proxy_pass http://game_container;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /um/ { #any URI starting with /um/ will be handled by proxy_pass http://user_management_group which is the name defined by #servername above
        proxy_pass http://user_management_container;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    location /registration/ {
        proxy_pass http://registration_container;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # redirect all routes from js router to homepage on reload (not sure if final yet!!) (the response should maybe be changed!!)
    location /match {
        return 301 https://$host:4443/;
    }
    location /tournament {
        return 301 https://$host:4443/;
    }
    location /login {
        return 301 https://$host:4443/;
    }
    location /signup {
        return 301 https://$host:4443/;
    }
    location /displayname {
        return 301 https://$host:4443/;
    }
    location /friends {
        return 301 https://$host:4443/;
    }
}
